<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.flytxt.tp</groupId>
		<artifactId>text-processor</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>web-service</artifactId>
	<packaging>jar</packaging>
	<properties>
		<tp-ws.cpus>1</tp-ws.cpus>
		<tp-ws.instances>1</tp-ws.instances>
		<tp-ws.mem>2048</tp-ws.mem>
		<gi.url></gi.url>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<!-- <dependency> <groupId>org.springframework.data</groupId> <artifactId>spring-data-rest-hal-browser</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.flytxt.tp</groupId>
			<artifactId>compiler</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>tp-web</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<finalName>tp-web</finalName>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>
									<groupId>org.projectlombok</groupId>
									<artifactId>lombok</artifactId>
								</exclude>
							</excludes>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>repackage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${basedir}</directory>
											<includes>
												<include>marathon.json</include>
												<include>chronos.json</include>
											</includes>
											<filtering>true</filtering>
										</resource>
									</resources>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<useDefaultDelimiters>true</useDefaultDelimiters>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${docker-plugin.version}</version>
						<configuration>
							<dockerDirectory>${project.build.directory}/..</dockerDirectory>
							<imageName>${dockerhub.url}/${project.artifactId}:${versionNumber}</imageName>
							<exposes>
								<expose>9000</expose>
							</exposes>
							<imageTags>
								<imageTag>${project.version}</imageTag>
								<imageTag>latest</imageTag>
							</imageTags>
							<resources>
								<resource>
									<targetPath>/</targetPath>
									<directory>${project.build.directory}</directory>
									<include>${project.build.finalName}.jar</include>
								</resource>
								<resource>
									<targetPath>/</targetPath>
									<directory>${project.build.directory}/..</directory>
									<include>extractjar.sh</include>
								</resource>
							</resources>
						</configuration>
						<executions>
							<execution>
								<id>build-image</id>
								<phase>deploy</phase>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.holidaycheck</groupId>
						<artifactId>marathon-maven-plugin</artifactId>
						<version>${marathon-plugin.version}</version>
						<configuration>
							<marathonHost>${gi.url}</marathonHost>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>deploy</goal>
								</goals>
								<phase>deploy</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
